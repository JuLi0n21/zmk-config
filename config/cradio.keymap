/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define DEFAULT 0
#define BT 1
#define SPECIAL 2

&mt {
      flavor = "tap-preferred";
   // tapping_term_ms = <200>;
};

/ {
    
 combos {
        compatible = "zmk,combos";
        combo_eScape {
            timeout-ms = <20>;
            key-positions = <0 1>;
            bindings = <&kp ESC>;
        };
        combo_lEft_BRACKET {
            timeout-ms = <20>;
            key-positions = <10 11>;
            bindings = <&kp LEFT_BRACKET>;
        };
        combo_lEft_PARENTHESIS {
            timeout-ms = <20>;
            key-positions = <11 12>;
            bindings = <&kp LEFT_PARENTHESIS>;
        };
        combo_lEft_BRACE {
            timeout-ms = <20>;
            key-positions = <12 13>;
            bindings = <&kp LEFT_BRACE>;
        };
        combo_rIght_BRACKET {
            timeout-ms = <20>;
            key-positions = <18 19>;
            bindings = <&kp RIGHT_BRACKET>;
        };
        combo_rIght_PARENTHESIS {
            timeout-ms = <20>;
            key-positions = <17 18>;
            bindings = <&kp RIGHT_PARENTHESIS>;
        };
        combo_rIght_BRACE {
            timeout-ms = <20>;
            key-positions = <16 17>;
            bindings = <&kp RIGHT_BRACE>;
        };
        combo_dElete {
            timeout-ms = <20>;
            key-positions = <12 17>;
            bindings = <&kp DELETE>;
        };
        combo_eNter {
            timeout-ms = <20>;
            key-positions = <13 16>;
            bindings = <&kp ENTER>;
        };
        combo_wIn {
            timeout-ms = <20>;
            key-positions = <20 21>;
            bindings = <&kp LWIN>;
        };
        combo_mInus {
            timeout-ms = <20>;
            key-positions = <7 8>;
            bindings = <&kp MINUS>;
        };
        combo_eQual {
            timeout-ms = <20>;
            key-positions = <8 9>;
            bindings = <&kp EQUAL>;
        };
        combo_DEFAULTLAYER {
            timeout-ms = <20>;
            key-positions = <4 5>;
            bindings = <&to DEFAULT>;
        };
        combo_BTLAYER {
            timeout-ms = <20>;
            key-positions = <14 15>;
            bindings = <&to BT>;
        };
        combo_SPECIALLAYER {
            timeout-ms = <20>;
            key-positions = <24 25>;
            bindings = <&to SPECIAL>;
        };
        combo_Lock {
            timeout-ms = <20>;
            key-positions = <23 26>;
            bindings = <&Lock>;
        };
        combo_Screenshot {
            timeout-ms = <20>;
            key-positions = <22 27>;
            bindings = <&Screenshot>;
        };
        combo_oe {
            timeout-ms = <20>;
            key-positions = <16 20>;
            bindings = <&oe>;
        };
        combo_ae {
            timeout-ms = <20>;
            key-positions = <10 16>;
            bindings = <&ae>;
        };
        combo_ue {
            timeout-ms = <20>;
            key-positions = <7 16>;
            bindings = <&ue>;
        };
    };
    
    macros {
    ZMK_MACRO(Screenshot,
        wait-ms = <0>;
        tap-ms = <0>;
        bindings 
        = <&macro_press &kp LEFT_WIN>
        , <&macro_press &kp LSHFT>
        , <&macro_tap &kp S>
        , <&macro_release &kp LEFT_WIN>
        , <&macro_release &kp LSHFT>
        ;
    )
    ZMK_MACRO(Lock,
        wait-ms = <0>;
        tap-ms = <0>;
        bindings 
        = <&macro_press &kp LEFT_WIN>
        , <&macro_tap &kp L>
        , <&macro_release &kp LEFT_WIN>
        ;
    )
    ZMK_MACRO(oe,
        wait-ms = <0>;
        tap-ms = <0>;
        bindings 
        = <&macro_press &kp LALT>
        , <&macro_tap &kp N1 &kp N4 &kp N8>
        , <&macro_release &kp LALT>
        ;
    )
    ZMK_MACRO(ae,
        wait-ms = <0>;
        tap-ms = <0>;
        bindings 
        = <&macro_press &kp LALT>
        , <&macro_tap &kp N1 &kp N3 &kp N2>
        , <&macro_release &kp LALT>
        ;
    )
    ZMK_MACRO(ue,
        wait-ms = <0>;
        tap-ms = <0>;
        bindings 
        = <&macro_press &kp LALT>
        , <&macro_tap &kp N1 &kp N2 &kp N9>
        , <&macro_release &kp LALT>
        ;
    )
    };

        //      ========================================= DEFAULT_LAYER =========================================
        //      |   0   |       |       |       |   4   |               |   5   |       |       |       |   9  |
        //      |   10  |       |       |       |   14  |               |   15  |       |       |       |   19 |
        //      |   20  |       |       |       |   24  |               |   25  |       |       |       |   29 |
        //                              |   30  |   31  |               |   32  |   33  |

        keymap {
                compatible = "zmk,keymap";
                default_layer {
		            bindings = <
        //      ========================================= DEFAULT_LAYER =========================================
        //      |  Q 1  |  W 2  |  F 3  |  P 4  |  G 5  |               |  J 6  |  L 7  |  U 8  |  9 Y  |  <- 0|
                &mt N1 Q &mt N2 W &mt N3 F &mt N4 P &mt N5 G 			&mt N6 J &mt N7 L &mt N8 U &mt N9 Y &mt N0 BACKSPACE
        //      | A HOME|   R   |   S   |   T   | D END |               |  H ⬅ |  N ⬇  |  E ⬆  |  I  ⮕|  O ;  |
                &mt HOME A &kp R &kp S &kp T &mt END D 			        &mt LEFT H   &mt DOWN N   &mt UP E   &mt RIGHT I   &mt SEMI O
        //      | Z TAB | X ALT |   C   |   V   |   B   |               |   K   |   M ' |  , '  |  . `  |  / | |
                &mt TAB Z &mt LALT X &kp C &kp V &kp B				    &kp K   &mt SEMI M   &mt SINGLE_QUOTE COMMA  &mt GRAVE DOT &mt BACKSLASH SLASH
        //                              | lsft  | SPACE |               | RSFT | lctrl |
	                                    &kp LSHIFT &kp SPACE  			&kp LCTRL &kp LSHIFT
        >;                                                                      
		}; 
		
		bt_layer {
		bindings = <
        //      ========================================= BLUETOOTH_LAYER =========================================
        //      |       |       |       |       |       |               |       |       |       |       |      |
		        &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2  &bt BT_SEL 3 &bt BT_SEL 4   	&none &none &none &none &none 
        //      |       |       |       |       |       |               |       |       |       |       |      |
		        &none &none &none &none &bt BT_CLR_ALL                  &none &none &none &none &none
        //      |       |       |       |       |       |               |       |       |       |       |      |
                &none &bt BT_PRV &none &bt BT_NXT &none                 &none &none &none &none &none
        //                              |       |       |               |       |       |
				                        &none &none                     &none &none 
		>;
		};	
		
		special_layer {
		bindings = <
        //      ========================================= SPECIAL_LAYER =========================================
        //      |       |       |       |       |       |               |       |       |       |       |      |
		        &kp N1  &kp N2    &kp N3    &kp N4    &kp N5 		    &trans &trans   &trans   &trans  &trans
        //      |       |       |       |       |       |               |       |       |       |       |      |
		        &kp F1 &kp F2 &kp F3 &kp F4 &kp F5  				    &trans &kp PG_UP  &kp K_VOL_UP &kp K_MUTE &trans 
        //      |       |       |       |       |       |               |       |       |       |       |      |
		        &bt BT_CLR  &bt BT_NXT &bt BT_PRV &kp F6 &kp F7   		&trans &kp PG_DN  &kp K_VOL_DN  &trans &trans   
        //                              |       |        |              |       |       |
                    					&none &none                     &none &none 
		>;
		};	
        
	};
};
