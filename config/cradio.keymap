/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>


&mt {
  //  flavor = "tap-preferred";
   // tapping_term_ms = <200>;
};

/ { 
    //Numbers
    combos {
        compatible = "zmk,combos";
        combo_lock { //			win + l 
            timeout-ms = <50>;
            key-positions = <10 11 12 13>;
            bindings = <&kp K_LOCK>;
        };
        combo_FEFAULTLAYER { //			2
            timeout-ms = <50>;
            key-positions = <31 32>;
            bindings = <&to 0>;
        };
        // Specialkeys 
        //  &mt     Hold / tap key
        //  &lt         Swaps layer
        //  &kp         presses key
        //  &trans      empty to properly handle empty keys
    };

        //      ========================================           =========================================
        //      |       |      |       |       |       |           |       |       |       |       |       |
        //      |       |      |       |       |       |           |       |       |       |       |       |
        //      |       |      |       |       |       |           |       |       |       |       |       |
        //                             |       |       |           |       |       |

        //      =========================================           =========================================
        //      | Key 0 |   1   |   2   |   3   |   4   |           |   5   |   6   |   7   |   8   |   9   |
        //      |  10   |  11   |  12   |  13   |  14   |           |  15   |   16  |  17   |  18   |  19   |
        //      |  20   |  21   |  22   |  23   |  24   |           |  25   |   26  |  27   |  28   |  29   |
        //                              |  30   |  31   |           |  32   |   33  |

        // KEY COMBOS
        //      ========================================           =========================================
        //      |       |      |       |       |       |   DELETE  |       |       |       |       |       |
        //      |       |      (       [       {       |   bcsp    |       }       ]       )       |       |
        //      |       |      |       |       |       |   ENTER   |       |       |       |       |       |
        //                             |       |       | DFT_LAYER |       |       |

        //DEFAULT_LAYER COLEMAK LAYOUT
        //      ========================================= DEFAULT_LAYER =========================================
        //      |  Q 1  |  W 2  |  F 3  |  P 4  |  G 5  |               |  J 6  |  L 7  |  U 8  |  9 Y  |SPACE 0|
        //      |   A   |   R   |   S   |   T   |   D   |               |  H    |  N ⬅ |  E ⬇  |  I ⬆  |  O ⮕ |
        //      |   Z   |   X   |   C   |   V   |   B   |               |   K   |   M ; |  . <  |  ,  > |  / ?  |
        //                              | lsft  | RR RR |               | LL LL | lctrl |
        keymap {
                compatible = "zmk,keymap";
                default_layer {
		            bindings = <
                &mt 1 Q &mt 2 W &mt 3 F &mt 4 P &mt 5 G 			&mt 6 J &mt 7 L &mt 8 U &mt 9 Y &mt 0 SPACE
                &kp A &kp R &kp S &kp T &kp D 			            &kp H   &mt LEFT N   &mt DOWN E   &mt UP I   &mt RIGHT O
                &mt TAB Z &kp X &kp C &kp V &kp B				    &kp K   &mt SEMI M   &kp NUM_0 &kp NUM_0 &kp NUM_0
	                                    &kp LSFT &kp 0  			&to 2 &kp LCTL
        >;                                                                      
		};

       	left_layer {
        bindings = <
        //      ========================================= LEFT_LAYER =========================================
        //      |       |       |       |       |       |               |       |       |       |       |      |
                &kp NUM_0 &kp P   &kp Y    &kp F  &kp G 			    &kp C   &kp R   &kp L   &kp SEMI &kp NUM_0 
        //      |       |       |       |       |       |               |       |       |       |       |       |
                &kp A   &kp O   &kp E   &kp U   &kp I 			        &kp D   &kp H   &kp T   &kp M   &kp S
        //      |       |       |       |       |       |               |       |       |       |       |       |
                &mt LSFT Z &kp Q &kp J  &kp K   &kp X				    &kp B   &kp M   &kp W   &kp V   &kp Z
        //                              |       |       |               |       |       |
	                                    &kp LSFT &trans   				&to 2 &kp LCTL
        >;
		};
		
		right_layer {
        // Key 0| Key 2 | Key 3 | Key 4 | Key 5 | Key 10 | Key 9 | Key 8 | Key 7 | Key 6 |
        //      |       |       |       |       |        |       |       |       |       |
        //      |       |       |       |       |        |       |       |       |       |
        //      |       |       |       |       |        |       |       |       |       |
        //      |       |       |       |       |        |       |       |       |       |
		bindings = <
		&none &none &none &bt BT_CLR &bt BT_SEL 0   	&bt BT_SEL 3 &bt BT_NXT &none &none &none 
		&none &none &none &none &bt BT_SEL 1        &bt BT_SEL 4 &bt BT_PRV &none &none &none
        &none &none &none &none &bt BT_SEL 2       &none &none &none &none &none
					      &none &none       &none &none 
		>;
		};	z
		
		tri_layer {
        // Key 0| Key 2 | Key 3 | Key 4 | Key 5 | Key 10 | Key 9 | Key 8 | Key 7 | Key 6 |
        //      |       |       |       |       |        |       |       |       |       |
        //      |       |       |       |       |        |       |       |       |       |
        //      |       |       |       |       |        |       |       |       |       |
        //      |       |       |       |       |        |       |       |       |       |
		bindings = <
		&kp NUM_1  &kp NUM_2    &kp NUM_3    &kp NUM_4    &kp NUM_5 			&trans &trans   &trans   &trans  &trans
		&kp F1 &kp F2 &kp F3 &kp F4 &kp F5  						&trans &kp PG_UP  &kp K_VOL_UP &kp K_MUTE &trans 
		&bt BT_CLR  &bt BT_NXT &bt BT_PRV &kp F6 &kp F7   				&trans &kp PG_DN  &kp K_VOL_DN  &trans &trans   
					 &trans &trans  					&trans &trans 
		>;
		};	
        
	};
};


