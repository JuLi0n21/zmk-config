/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>


&mt {
      flavor = "tap-preferred";
   // tapping_term_ms = <200>;
};

/ {
    
 combos {
        compatible = "zmk,combos";
        combo_esc {
            timeout-ms = <20>;
            key-positions = <0 1>;
            bindings = <&kp ESC>;
        };
         combo_defaultlayer {
            timeout-ms = <20>;
            key-positions = <31 32>;
            bindings = <&to 0>;
        };
          combo_square_leftside {
            timeout-ms = <20>;
            key-positions = <10 11>;
            bindings = <&kp LEFT_BRACKET>;
        };
        combo_curly_leftside {
            timeout-ms = <20>;
            key-positions = <11 12>;
            bindings = <&kp LEFT_PARENTHESIS>;
        };
        combo_brace_leftside {
            timeout-ms = <20>;
            key-positions = <12 13>;
            bindings = <&kp LEFT_BRACE>;
        };
        combo_square_rightside {
            timeout-ms = <20>;
            key-positions = <18 19>;
            bindings = <&kp RIGHT_BRACKET>;
        };
        combo_curly_rightside {
            timeout-ms = <20>;
            key-positions = <17 18>;
            bindings = <&kp RIGHT_PARENTHESIS>;
        };
        combo_brace_rightside {
            timeout-ms = <20>;
            key-positions = <16 17>;
            bindings = <&kp RIGHT_BRACE>;
        };
        /*combo_backspace {
            timeout-ms = <20>;
            key-positions = <13 16>;
            bindings = <&kp BACKSPACE>;
        }; */
        combo_delete {
            timeout-ms = <20>;
            key-positions = <12 17>;
            bindings = <&kp DELETE>;
        };
        combo_enter {
            timeout-ms = <20>;
            key-positions = <13 16>;
            bindings = <&kp ENTER>;
        };
        combo_win {
            timeout-ms = <20>;
            key-positions = <20 21>;
            bindings = <&kp LWIN>;
        };
        combo_minus {
              timeout-ms = <20>;
            key-positions = <7 8>;
            bindings = <&kp MINUS>;
           };
         combo_equal {
            timeout-ms = <20>;
            key-positions = <8 9>;
            bindings = <&kp EQUAL>;
           };
      //  combo_alt_f4 {
        //    timeout-ms = <20>;
          //  key-positions = <10 11>
            // bindings = <&kp ALT, &kp F4>;
        //}
    };

    //Numbers
        //      ========================================           =========================================
        //      |       |      |       |       |       |           |       |       |       |       |       |
        //      |       |      |       |       |       |           |       |       |       |       |       |
        //      |       |      |       |       |       |           |       |       |       |       |       |
        //                             |       |       |           |       |       |

        //      =========================================           =========================================
        //      | Key 0 |   1   |   2   |   3   |   4   |           |   5   |   6   |   7   |   8   |   9   |
        //      |  10   |  11   |  12   |  13   |  14   |           |  15   |   16  |  17   |  18   |  19   |
        //      |  20   |  21   |  22   |  23   |  24   |           |  25   |   26  |  27   |  28   |  29   |
        //                              |  30   |  31   |           |  32   |   33  |

        // KEY COMBOS
        //      ========================================           =========================================
        //      |       |      |       |       |       |   DELETE  |       |       |       |       |       |
        //      |       |      (       [       {       |   bcsp    |       }       ]       )       |       |
        //      |       |      |       |       |       |   ENTER   |       |       |       |       |       |
        //                             |       |       | DFT_LAYER |       |       |

        //DEFAULT_LAYER COLEMAK LAYOUT
        //      ========================================= DEFAULT_LAYER =========================================
        //      |  Q 1  |  W 2  |  F 3  |  P 4  |  G 5  |               |  J 6  |  L 7  |  U 8  |  9 Y  |      0|
        //      | A HOME|   R   |   S   |   T   | D END |               |  H ⬅ |  N ⬇  |  E ⬆  |  I  ⮕|  O   |
        //      | Z TAB | X ALT |   C   |   V   |   B   |               |   K   |   M ; |  , '  |  . `   |  /    |
        //                              | lsft  | SPACE |               | RSFT | lctrl |
        keymap {
                compatible = "zmk,keymap";
                default_layer {
		            bindings = <
                &mt NUM_1 Q &mt NUM_2 W &mt NUM_3 F &mt NUM_4 P &mt NUM_5 G 			&mt NUM_6 J &mt NUM_7 L &mt NUM_8 U &mt NUM_9 Y &mt NUM_0 BACKSPACE
                &mt HOME A &kp R &kp S &kp T &mt END D 			            &mt LEFT H   &mt DOWN N   &mt UP E   &mt RIGHT I   &mt SEMI O
                &mt TAB Z &mt LALT X &kp C &kp V &kp B				    &kp K   &mt SEMI M   &mt SINGLE_QUOTE COMMA  &mt GRAVE DOT &kp SLASH
	                                    &kp LSFT &kp SPACE  			&to LCTL &kp LSFT
        >;                                                                      
		}; 

       	left_layer {
        bindings = <
        //      ========================================= LEFT_LAYER =========================================
        //      |       |       |       |       |       |               |       |       |   ⬆   |       |      |
                &kp ESC &kp F12 &kp F13 &kp 14 &kp F15 			        &kp F16 &kp F17 &kp UP &kp F18 &kp F19 
        //      |       |       |       |       |       |               |       |  ⬅   |  ⬇   |   ⮕  |       |
                &kp F20   &kp F21   &kp F22   &kp F23   &kp F24 		&none  &kp LEFT &kp DOWN &kp RIGHT &none
        //      |       |       |       |       |       |               |       |       |      |       |       |
                &kp TAB &none   &none   &none   &none				    &none   &none   &none  &none  &none
        //                              |       |       |               |       |       |
	                                    &kp LSFT  &none  				&none   &kp LCTL
        >;
		};
		
		right_layer {
        // Key 0| Key 2 | Key 3 | Key 4 | Key 5 | Key 10 | Key 9 | Key 8 | Key 7 | Key 6 |
        //      |       |       |       |       |        |       |       |       |       |
        //      |       |       |       |       |        |       |       |       |       |
        //      |       |       |       |       |        |       |       |       |       |
        //      |       |       |       |       |        |       |       |       |       |
		bindings = <
		&none &none &none &bt BT_CLR &bt BT_SEL 0   	&bt BT_SEL 3 &bt BT_NXT &none &none &none 
		&none &none &none &none &bt BT_SEL 1        &bt BT_SEL 4 &bt BT_PRV &none &none &none
        &none &none &none &none &bt BT_SEL 2       &none &none &none &none &none
					      &none &none       &none &none 
		>;
		};	
		
		tri_layer {
        // Key 0| Key 2 | Key 3 | Key 4 | Key 5 | Key 10 | Key 9 | Key 8 | Key 7 | Key 6 |
        //      |       |       |       |       |        |       |       |       |       |
        //      |       |       |       |       |        |       |       |       |       |
        //      |       |       |       |       |        |       |       |       |       |
        //      |       |       |       |       |        |       |       |       |       |
		bindings = <
		&kp NUM_1  &kp NUM_2    &kp NUM_3    &kp NUM_4    &kp NUM_5 			&trans &trans   &trans   &trans  &trans
		&kp F1 &kp F2 &kp F3 &kp F4 &kp F5  						&trans &kp PG_UP  &kp K_VOL_UP &kp K_MUTE &trans 
		&bt BT_CLR  &bt BT_NXT &bt BT_PRV &kp F6 &kp F7   				&trans &kp PG_DN  &kp K_VOL_DN  &trans &trans   
					 &trans &trans  					&trans &trans 
		>;
		};	
        
	};
};
